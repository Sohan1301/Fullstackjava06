Spring Cloud
============
Spring Cloud Components
------------------------------------
There are the following components:
1.Configuration
2.Service Discovery
3.Circuit Breakers
4.Routing and Messaging
5.API Gateway
6.Load balancing Tracing
7.CI Pipeline and Testing
================================
1.Service Configuration/Service Register
--------------------------------------------------------------
Spring Cloud configuration components provide server-side 
and client-side support for externalized configuration 
in a distributed system. We can manage the external 
properties with config server for applications across all 
environments. 
Spring Cloud config server can use 
Git, SVN (Apache Subversion), filesystem
ex: aws,azure,Eureka Cloud Server,Google..etc
---------------------------------------------------------------------------
Service Discovery
-----------------------------
The service discovery is the automatic detection of 
devices and services over the network. In other words,
 service discovery is how an application and microservices 
connect in the distributed environment.
 Service discovery implementations include both:

-->The central server that maintains a global view of the address.
--> The clients that connect to the central server can update and retrieve the address.

============================================================
Circuit Breakers
----------------------------
Netflix has created a library called Hystrix. It implements
 the circuit breakers pattern. Circuit breakers 
calculate when to open and close the 
circuit and what to do in case of failure. 
When all services fail at some point, the circuit breaker 
handles these failures gracefully. 
The circuit breakers have three states: OPEN, CLOSED, and HALF-OPEN State.
--> circuit breakers implements with Resoulance4j libraries
==================================================================
Routing and Messaging
=======================
The cloud application made up of many microservices so 
the communication will be critical. Spring Cloud supports 
communication via messaging or HTTP request. 
Routing uses Netflix Ribbon and 
Open Feign while messaging uses Kafka or Rabbit MQ.

==================================================
API Gateway
=============
API Gateway allows us to route API 
request (external or internal) to connect 
services. It also provides a library for 
building an API gateway on the top of 
Spring MVC. Its aims to provide cross-cutting 
concerns to them, such as security and monitoring.

Tools: Zull API, Spring Cloud API (recomended).
---------------------------------------------------------------------
Load Balancing and Tracing
-------------------------------------------
Spring Cloud's other functionality is distributed tracing. 
Tracing is a single request to get data from the 
application. Tracing results in an exponentially 
larger number of requests to various microservices.

We can add Spring Cloud Sleuth library in our 
project to enable tracing. Sleuth is responsible 
for recording timing, which is used for latency analysis. 
We can export this timing to Zipkin.

Zipkin is a distributed tracing tool specially 
designed for analyzing latency problem inside 
the microservice architecture. It exposes HTTP 
endpoint used for collecting input data. 
If we required to add tracing in our project, 
we should add the spring-cloud-starter-zipkin dependency.
==================================================
CI pipelining and TESTING
-----------------------------------------
Spring Cloud pipeline is an opinionated (self-important) pipeline 
for Jenkins and Concourse, which creates pipeline 
automatically for the application. 
The building, testing, and deploying in various 
services is critical to having a successful cloud-native application.

The Jenkins pipeline provides a set of the 
tool designed for modeling simple and more 
advanced delivery pipeline as code. The 
definition of a pipeline is written into a 
text file called Jenkinsfile.
====================================================















