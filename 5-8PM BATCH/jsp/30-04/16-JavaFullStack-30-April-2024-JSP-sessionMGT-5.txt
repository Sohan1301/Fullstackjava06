create a jsp web application gamil registration page with hidden form field
-----------------------------------------------------------------------------------------------------------------
table: gamil
------------------
mysql> create table gmail(firstname varchar(40),
    -> lastname varchar(40),
    -> dob varchar(40),
    -> gender varchar(40),
    -> email varchar(40),
    -> password varchar(40),
    -> mobile_no varchar(40),
    -> recovery_email varchar(40),
    -> country varchar(40));
Query OK, 0 rows affected (0.20 sec)

mysql> desc gmail;
+----------------+-------------+------+-----+---------+-------+
| Field          | Type        | Null | Key | Default | Extra |
+----------------+-------------+------+-----+---------+-------+
| firstname      | varchar(40) | YES  |     | NULL    |       |
| lastname       | varchar(40) | YES  |     | NULL    |       |
| dob            | varchar(40) | YES  |     | NULL    |       |
| gender         | varchar(40) | YES  |     | NULL    |       |
| email          | varchar(40) | YES  |     | NULL    |       |
| password       | varchar(40) | YES  |     | NULL    |       |
| mobile_no      | varchar(40) | YES  |     | NULL    |       |
| recovery_email | varchar(40) | YES  |     | NULL    |       |
| country        | varchar(40) | YES  |     | NULL    |       |
+----------------+-------------+------+-----+---------+-------+
9 rows in set (0.03 sec)

mysql>
====================================
reg.jsp
-------------

<form action="S1.jsp" method="post">
First Name:<input type="text" name="fname"><p></p>
Last Name:<input type="text" name="lname"><p></p>
DOB:<input type="text" name="dob"><p></p>
Gender:<input type="radio" name="gender" value="male">Male
<input type="radio" name="gender" value="female">Female<p></p>
Email:<input type="email" name="mail"><p></p>
<input type="submit" value="Next"><p></p>
</form>
===================================================
S1.jsp
-------------
<%
String firstname=request.getParameter("fname");
String lastname=request.getParameter("lname");
String dob=request.getParameter("dob");
String gender=request.getParameter("gender");
String email=request.getParameter("mail");
out.print("Welcome:"+email+"<br>");
%>
<form action="S2.jsp">
<input type="hidden" name="fname" value=<%=firstname %>>
<input type="hidden" name="lname" value=<%=lastname %>>
<input type="hidden" name="dob" value=<%=dob %>>
<input type="hidden" name="gender" value=<%=gender %>>
<input type="hidden" name="mail" value=<%=email %>>
Password:<input type="password" name="psw1"><p></p>
Confirm Password:<input type="password" name="psw2"><p></p>
Mobile Number:<input type="text" name="mno"><p></p>
Recovery Email:<input type="email" name="rmail"><p></p>
Country:<input type="text" name="country"><p></p>
<input type="submit" value="Register">
</form>
==============================================================
S2.jsp
--------------
<%@page import="java.sql.*" %>
<%
String firstname=request.getParameter("fname");
String lastname=request.getParameter("lname");
String dob=request.getParameter("dob");
String gender=request.getParameter("gender");
String email=request.getParameter("mail");
String ps1=request.getParameter("psw1");
String ps2=request.getParameter("psw2");
String mobile_no=request.getParameter("mno");
String recovery_email=request.getParameter("rmail");
String country=request.getParameter("country");
String password=null;
if(ps1.equals(ps2))
{
	password=ps1;
}
try
{
	Class.forName("com.mysql.cj.jdbc.Driver");
	Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/excelrdb","root","root");
	PreparedStatement ps=con.prepareStatement("insert into gmail values(?,?,?,?,?,?,?,?,?)");
	ps.setString(1, firstname);
	ps.setString(2, lastname);
	ps.setString(3, dob);
	ps.setString(4, gender);
	ps.setString(5, email);
	ps.setString(6, password);
	ps.setString(7, mobile_no);
	ps.setString(8, recovery_email);
	ps.setString(9, recovery_email);
	ps.setString(8, country);
	int i=ps.executeUpdate();
	out.print(i+"new user register successfully....");
}
catch(Exception ex)
{
	ex.printStackTrace();
}

%>
---------------------------

output
--------------
mysql> SElect *from gmail;
+-----------+----------+-------------+--------+---------------+----------+-----------+----------------+---------------+
| firstname | lastname | dob         | gender | email         | password | mobile_no | recovery_email | country       |
+-----------+----------+-------------+--------+---------------+----------+-----------+----------------+---------------+
| sai       | ram      | 12-jan-2000 | male   | sai@gmail.com | sai123   | 96543210  | India          | raj@gmail.com |
+-----------+----------+-------------+--------+---------------+----------+-----------+----------------+---------------+
1 row in set (0.01 sec)
===============================================================================================
===============================================================================================
Session  object
------------------------


Servlet/JSP  Session
------------------------------
session is particular intervel of time between 
client mechine and server mechine.
--> Session simply means a particular interval of time.
--> Session Tracking is a way to maintain state (data) of an user. 
It is also known as session management in servlet and jsp.
--> Http protocol is a stateless so we need to maintain state
 using session tracking techniques. 
--> Each time user requests to the server, server treats the
 request as the new request. So we need to maintain the 
state of an user to recognize to particular user.

HttpSession interface
---------------------
import javax.servlet.http.HttpSession;

***every time with first  user request ,
container creates a session id for each user.
The container uses this id to 
identify the particular user.

An object of HttpSession can be used to perform two tasks:
HttpSession session=request.getSession();    
// create new session id in container i.e unique id.
session.setAttribute("uname",n);

read session object for next request 
--------------------------------------------
HttpSession session=new HttpSession(false); 
// if first server file not 
create the object it will create object. if objcet alreay 
created by first server won't create the object.
String name=(String)session.getAttribute("uname");
out.print(name);

===============================================================================






















