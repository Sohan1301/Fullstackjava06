Identifiers
--------------
An identifier is a name given to entities like class, 
methods, variables, interface names 
packages
etc. It helps to differentiate one entity from another.


Identifiers Rules
Identifiers can be a 
combination of letters in lowercase 
(a to z) or uppercase (A to Z) or digits (0 to 9) or an underscore (_) and $.

--> An identifier cannot start with a digit.

--> Keywords name cannot be used as identifiers.
--> We cannot use special symbols like !, @, #, % etc. in our identifier.
--> An identifier can be of any length.

-------------------------------------------------

Rules to declare identifiers:
----------------------------
The only allowed characters are:	=>	a-z,A-Z,0-9,_,$
	
			valid statements	invalid statements	Reason
			-----------------	------------------	------
			int x;			int 7;			Should not be a digit	
			int m1;			int 5m;			Should not start with a digit
			int a,b,c;		int a b c;		Should not allow space	
			int stud_id;		int stud-id;		-(minus) Not Allowed(special symbol)
			int If,Else,..		int if,else,do;		Keywords are not used
			int Integer;		int float;		Keywords are not used


Note: All Keywords must start with lower case lettesrs in java
-----------------------------------------------------------------
String If;     --> valid
String if;      --> in valid
int int; ---> in valid

int Int;  --> valid


this
--------------------------------
2. Naming Convention
------------------
--> Naming convention tell us how to decalre class names,interface names
method names, variable names and packages names in our applications.

--> Purpose is to increse readibility Java Code.


Property Name                         Conventions
-------------                          ----------------
class                                  Class Names Must Start With Upper case letters
                                        ex: String,BufferReader,Scanner,
					Test,MyProgram  etc
interface				interface Names Must Start With Upper case letters
					ex: List,Set,Map,ApplicationContext,BeanFactory....ect

methods                                 method names must start with Lower case letters
					next(),nextInt(),nextFloat(),nextDuble(),
					print(),printRecord(),homePage()....etc
variables names                         variable names must be lower case letters
                                        ex:  name,rollNo,price,rate,balance
					    firstName,lastName....etc
packages Names                          Package Names must in lower case letters Only
					ex: java,util,lang,net,awt,swings,javax,servlet...etc
Constants                               ALL words in upper Case letters
					ex: MAX_VALUE,MIN_VALUE,SCROLL_BAR..etc
=====================================================================================
3. Java Key words
------------------
--> key words are reserved words given by programming language it self.
--> java keyword purpose and defination not change by programmer.
--> Java having a 53 key word (jdk1.7) version
after JDK 1.8   --> 63 --> 

All Java Key words
--------------------

Purpose				Keywords
-------				--------
Access modifiers		private, protected, public

Class, method,			abstract, class, extends, final, 
variable modifiers		implements, interface, native, new, 
				static, strictfp, synchronized, 
				transient, volatile
	

Flow control			break, case, continue, default, do, 
				else, for, if, instanceof, return,
				switch, while

Package control			import, package

Primitive types			boolean, byte, char, double, float, 
				int, long, short

Exception handling		assert, catch, finally, throw, throws, try

Enumeration			enum

Others				super, this, void, true, false, null

Unused				const, goto
==================================================================================
4. Data Types In Java
----------------------
--> Data Types describe what type of data can hold in our variables.
--> data in number type, character type, decimal number type,
group of characters....etc

--> Basically in Java we have 2 type of data types
1. primitive data Type
2. Collection data type ( Non-primitive data tyeps)


1. primitive data Type
---------------------
--> which variable can hold single value such type of data types are
primitive data Type

ex:

int rollNo=120;

2. Collection data type ( Non-primitive data tyeps)
--------------------------------------------
--> which object can hold more than one value . Then go with
collection type data types or Non-primitive data tyeps.

Ex:

Paint Image
-------------




























































