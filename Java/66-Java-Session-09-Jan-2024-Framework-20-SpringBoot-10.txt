Product Spring Boot CRUD Application with MySQL data Base
============================================================
Required Files Are
----------------------
1.Product.java  --> @Entity+@Table+@Id+@Column
2. ProductRepo.java --> (I)--> @Repository
3. ProductService.java --> (I) --> Abstracted methods for CRUD operation
public Product saveProduct(Product product);
public Product updateProduct(Product product);
public void deleteProduct(int cid);
public Product getOneProduct(int cid);
public List<Product> getAllProducts();
3. ProductServiceImp.java   --> (C)--> @Service
4. ProductController.java   --> @Controller
5.application.properties --> portnocode+viewResolver code+Db conn stmt+JPA dailect properties
6.Application.java  -> @SpringBootApplication
7.jsp files
a) home.jsp
b) product.jsp  (design form)
c) success.jsp
d) viewProducts.jsp
e) editProduct.jsp
------------------------------------------------------------
Required starters Are
-------------------------
1. spring web
2.spring boot dev tools
3. spring data jpa
4. MySQL driver  / mysql connector --> wwww.mvnrepository.com to pom.xml file
5.tomcat jasper
6. javax.servlet.api
7.jakarta.servlet.jsp.jstl.api
-----------------------------------------------
Hibernate: 
    create table product (
        cid integer not null,
        discount float(53) not null,
        gst_amt float(53) not null,
        invoice_bill float(53) not null,
        mobile_no bigint not null,
        name varchar(255),
        price float(53) not null,
        prodname varchar(255),
        quantity integer not null,
        total float(53) not null,
        primary key (cid)
    ) engine=InnoDB
========================================================
mysql> desc product;
+--------------+--------------+------+-----+---------+-------+
| Field        | Type         | Null | Key | Default | Extra |
+--------------+--------------+------+-----+---------+-------+
| cid          | int          | NO   | PRI | NULL    |       |
| discount     | double       | NO   |     | NULL    |       |
| gst_amt      | double       | NO   |     | NULL    |       |
| invoice_bill | double       | NO   |     | NULL    |       |
| mobile_no    | bigint       | NO   |     | NULL    |       |
| name         | varchar(255) | YES  |     | NULL    |       |
| price        | double       | NO   |     | NULL    |       |
| prodname     | varchar(255) | YES  |     | NULL    |       |
| quantity     | int          | NO   |     | NULL    |       |
| total        | double       | NO   |     | NULL    |       |
+--------------+--------------+------+-----+---------+-------+
10 rows in set (0.04 sec)
=====================================================================================
Product.jsp
---------------
package com.web.model;

import jakarta.persistence.Entity;
import jakarta.persistence.Id;

@Entity
public class Product {

	@Id
	private int cid;
	private String name;
	private long mobileNo;
	private String prodname;
	private double price;
	private int quantity;
	private double total;
	private double discount;
	private double gst_amt;
	private double invoice_bill;
	//PDC+PPC+PSM+PGM+toString()
	public Product() {
		super();
	}
	public int getCid() {
		return cid;
	}
	public void setCid(int cid) {
		this.cid = cid;
	}
	public String getName() {
		return name;
	}
	public void setName(String name) {
		this.name = name;
	}
	public long getMobileNo() {
		return mobileNo;
	}
	public void setMobileNo(long mobileNo) {
		this.mobileNo = mobileNo;
	}
	public String getProdname() {
		return prodname;
	}
	public void setProdname(String prodname) {
		this.prodname = prodname;
	}
	public double getPrice() {
		return price;
	}
	public void setPrice(double price) {
		this.price = price;
	}
	public int getQuantity() {
		return quantity;
	}
	public void setQuantity(int quantity) {
		this.quantity = quantity;
	}
	public double getTotal() {
		return total;
	}
	public void setTotal(double total) {
		this.total = total;
	}
	public double getDiscount() {
		return discount;
	}
	public void setDiscount(double discount) {
		this.discount = discount;
	}
	public double getGst_amt() {
		return gst_amt;
	}
	public void setGst_amt(double gst_amt) {
		this.gst_amt = gst_amt;
	}
	public double getInvoice_bill() {
		return invoice_bill;
	}
	public void setInvoice_bill(double invoice_bill) {
		this.invoice_bill = invoice_bill;
	}
	@Override
	public String toString() {
		return "Product [cid=" + cid + ", name=" + name + ", mobileNo=" + mobileNo + ", prodname=" + prodname
				+ ", price=" + price + ", quantity=" + quantity + ", total=" + total + ", discount=" + discount
				+ ", gst_amt=" + gst_amt + ", invoice_bill=" + invoice_bill + "]";
	}
	
	
	
}

=============================================================================================
ProductRepo.java (I)
--------------------------
package com.web.repo;

import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.stereotype.Repository;

import com.web.model.Product;

@Repository
public interface Productrepo extends JpaRepository<Product, Integer> {

}

===========================================================================
application.properties
-------------------------

server.port:8000
spring.mvc.view.prefix=/views/
spring.mvc.view.suffix=.jsp
# Database related properties
spring.datasource.url=jdbc:mysql://localhost:3306/excelrdb?useSSL=false&serverTimezone=UTC
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.username=root
spring.datasource.password=root

# Jpa properties/ HB related properties
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.hibernate.ddl-auto=update
#spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect



============================================================================
ProductService.java  (I)
---------------------------
package com.web.service;

import java.util.List;

import com.web.model.Product;

public interface ProductService {

	public Product saveProduct(Product product);
	public Product updateProduct(Product product);
	public void deleteProduct(int cid);
	public Product getOneProduct(int cid);
	public List<Product> getAllProducts();
}

======================================================================
ProductServiceImp.java (C)
----------------------------
package com.web.service;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.web.model.Product;
import com.web.repo.Productrepo;

@Service
public class ProductServiceImp implements ProductService {
	
	@Autowired
	private Productrepo productRepo;

	@Override
	public Product saveProduct(Product product) {
		double tot=0.0,dis=0.0,invoice=0.0,gst=0.0;
		tot=product.getPrice()*product.getQuantity();
		if(tot<5000)
		{
			dis=(tot*10)/100;
		}
		else if(tot>=5000)
		{
			dis=(tot*23)/100;
		}
		gst=(tot*18)/100;
		invoice=(tot-dis)+gst;
		product.setTotal(tot);
		product.setDiscount(dis);
		product.setInvoice_bill(invoice);
		product.setGst_amt(gst);
		Product productSave=productRepo.save(product);
		return productSave;
	}
	@Override
	public List<Product> getAllProducts() {
		List<Product> listOfProducts=productRepo.findAll();
		return listOfProducts;
	}
	@Override
	public void deleteProduct(int cid) {
		productRepo.deleteById(cid);

	}

	@Override
	public Product updateProduct(Product product) {
		// TODO Auto-generated method stub
		return null;
	}

	

	@Override
	public Product getOneProduct(int cid) {
		// TODO Auto-generated method stub
		return null;
	}

	

}

=================================================================
ProductController.java (C)
---------------------------------
package com.web.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;

import com.web.model.Product;
import com.web.service.ProductServiceImp;

@Controller
public class ProductController {
	
	@Autowired
	private ProductServiceImp productServiceImp;

	@RequestMapping("/")
	public String homePage()
	{
		return "home";
	}
	@RequestMapping("/addProduct")
	public String productForm()
	{
		return "product";
	}
	@RequestMapping("/save")
	public String saveProductDetails(Product product)
	{
		Product p=productServiceImp.saveProduct(product);
		return "success";
	}
	@RequestMapping("/viewProducts")
	public String showProducts(ModelMap model)
	{
		model.put("products", productServiceImp.getAllProducts());
		return "viewProduct";
	}
	@RequestMapping("/delete/{cid}")
	public String delete(@PathVariable int cid)
	{
		productServiceImp.deleteProduct(cid);
		return "redirect:/viewProducts";
	}
}

=========================================================
pom.xml
-------------
<!-- https://mvnrepository.com/artifact/org.apache.tomcat/tomcat-jasper -->
<dependency>
    <groupId>org.apache.tomcat</groupId>
    <artifactId>tomcat-jasper</artifactId>
    <version>10.1.17</version>
</dependency>
 <!-- Servlet API -->
    <dependency>
        <groupId>javax.servlet</groupId>
        <artifactId>javax.servlet-api</artifactId>
        <version>4.0.1</version>
        <scope>provided</scope>
    </dependency>

    <!-- JSTL Implementation -->
    <dependency>
        <groupId>org.glassfish.web</groupId>
        <artifactId>jakarta.servlet.jsp.jstl</artifactId>
        <version>2.0.0</version>
    </dependency>
===========================================================================
home.jsp
-----------
<center>
<h1 style="color:red">PRODUCT INVOICE WEB APPLICATION</h1>
<a href="/addProduct">Add Product Here</a><p></p>
<a href="/viewProducts">View All Product Details</a><p></p>
</center>
========================================================
product.jsp
-------------
<center>
<h1>New Product Details Form</h1>
<form action="/save">
Customer Id:<input type="text" name="cid"><p></p>
Customer Name:<input type="text" name="name"><p></p>
Mobile Number:<input type="text" name="mobileNo"><p></p>
Product Name:<input type="text" name="prodname"><p></p>
Price:<input type="text" name="price"><p></p>
Quantity:<input type="text" name="quantity"><p></p>
<input type="submit" value="SaveProduct"><p></p>

</form>
</center>
=============================================================
viewProduct.jsp
-------------------
<%@ page contentType="text/html;charset=UTF-8" language="java" %>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c" %>
<h1>View All PRODUCT DETAILS</h1>
<table border="1">
<tr>
    <th>CID</th>
    <th>NAME</th>
    <th>MOBILE NUMBER</th>
    <th>PRODUCT NAME</th>
    <th>PRICE</th>
    <th>QUANTITY</th>
    <th>TOTAL</th>
    <th>DISCOUNT</th>
    <th>GST_AMT</th>
    <th>INVOICE_BILL</th>
    <th>EDIT</th>
    <th>DELETE</th>
</tr>
<c:forEach var="product" items="${products}">
    <tr>  
        <td>${product.cid}</td>  
        <td>${product.name}</td>   
        <td>${product.mobileNo}</td> 
        <td>${product.prodname}</td> 
        <td>${product.price}</td> 
        <td>${product.quantity}</td> 
        <td>${product.total}</td> 
        <td>${product.discount}</td> 
        <td>${product.gst_amt}</td> 
        <td>${product.invoice_bill}</td> 
       
        <td>
            <a href="/edit/${product.cid}">Edit</a>
        </td>
        <td>
            <a href="/delete/${product.cid}">Delete</a>
        </td>
        </td> 
         </tr>  
</c:forEach>
</table>

==============================================================














